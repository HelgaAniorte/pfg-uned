/*
 * Copyright (C) 2017 Alberto Bausá Cano
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package app.view_controller.menuprincipal;

import app.model.datospaciente.ResumenPacienteModel;
import app.model.menuprincipal.MenuFacultativoModel;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.Insets;

/**
 *
 * @author Alberto Bausá Cano
 */
public class MenuFacultativoVC extends library.JIASimpleDialog {

    private final MenuFacultativoModel model;
    
    /**
     * Creates new form MenuFacultativoVC
     * 
     * @param registeredPatients Modelo para el diálogo
     */
    public MenuFacultativoVC(MenuFacultativoModel registeredPatients) {
        model = registeredPatients;
        initComponents();
        initListData();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setPreferredSize(new java.awt.Dimension(470, 106));
        setLayout(new java.awt.GridBagLayout());
    }// </editor-fold>//GEN-END:initComponents
    
    @Override
    public boolean validateThis() { return true; } // nada que validar

    @Override
    public void saveThis() { } // nada que guardar

    @Override
    public void cleanThis() { }

    @Override
    public void getExternVal(String id, Object value) { }

    public MenuFacultativoModel getModel() {
        return model;
    }

    private void initListData() {
        FilaPacienteFacultativoVC fila;
        
        GridBagConstraints constraints = new GridBagConstraints();
        constraints.gridx = 0;
        constraints.gridy = 0;
        constraints.fill = GridBagConstraints.BOTH;
        constraints.weightx = 1.0;
        constraints.weighty = 1.0;
        constraints.insets = new Insets(0, 20, 20, 20);
        
        for(ResumenPacienteModel paciente : model.getListaPacientes().values()) {
            fila = new FilaPacienteFacultativoVC(paciente);
            
            if(constraints.gridy == 0)
                constraints.insets = new Insets(20, 20, 20, 20);
            else if(constraints.gridy == model.getListaPacientes().size()-1)
                constraints.insets = new Insets(0, 20, 5, 20);
            else
                constraints.insets = new Insets(0, 20, 20, 20);
            
            constraints.gridy++;
            this.add(fila, constraints);
        }
        
        this.setPreferredSize(new Dimension(this.getPreferredSize().width,
                this.getPreferredSize().height + 40*model.getListaPacientes().size()));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
